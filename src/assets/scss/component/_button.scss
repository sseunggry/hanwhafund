@use 'sass:map';
@use "../util" as *;

/* 버튼 / 링크 */
// 사이즈 정의
@mixin button-size-variable() {
  // 변수 배열 설정
  $button-size: (
    xsmall: (
      size-height: var(--#{$prefix}-size-small),
      padding-x: var(--#{$prefix}-padding-4),
      padding-y: 0,
      gap: var(--#{$prefix}-gap-1),
      radius: var(--#{$prefix}-radius-small),
      small-font-size: var(--#{$prefix}-small-font-size-label-xsmall),
      medium-font-size: var(--#{$prefix}-medium-font-size-label-xsmall),
      large-font-size: var(--#{$prefix}-large-font-size-label-xsmall),
      font-weight: var(--#{$prefix}-font-weight-regular),
    ),
    small: (
      size-height: var(--#{$prefix}-size-medium),
      padding-x: var(--#{$prefix}-padding-5),
      padding-y: 0,
      gap: var(--#{$prefix}-gap-2),
      radius: var(--#{$prefix}-radius-medium),
      small-font-size: var(--#{$prefix}-small-font-size-label-small),
      medium-font-size: var(--#{$prefix}-medium-font-size-label-small),
      large-font-size: var(--#{$prefix}-large-font-size-label-small),
      font-weight: var(--#{$prefix}-font-weight-regular),
    ),
    medium: (
      size-height: var(--#{$prefix}-size-large),
      padding-x: var(--#{$prefix}-padding-6),
      padding-y: 0,
      gap: var(--#{$prefix}-gap-2),
      radius: var(--#{$prefix}-radius-large),
      small-font-size: var(--#{$prefix}-small-font-size-label-medium),
      medium-font-size: var(--#{$prefix}-medium-font-size-label-medium),
      large-font-size: var(--#{$prefix}-large-font-size-label-medium),
      font-weight: var(--#{$prefix}-font-weight-regular),
    ),
    large: (
      size-height: var(--#{$prefix}-size-xlarge),
      padding-x: var(--#{$prefix}-padding-7),
      padding-y: 0,
      gap: var(--#{$prefix}-gap-2),
      radius: var(--#{$prefix}-radius-xlarge),
      small-font-size: var(--#{$prefix}-small-font-size-label-large),
      medium-font-size: var(--#{$prefix}-medium-font-size-label-large),
      large-font-size: var(--#{$prefix}-large-font-size-label-large),
      font-weight: var(--#{$prefix}-font-weight-regular),
    ),
    text-small: (
      size-height: var(--#{$prefix}-size-xsmall),
      padding-x: var(--#{$prefix}-padding-1),
      padding-y: 0,
      gap: var(--#{$prefix}-gap-1),
      radius: var(--#{$prefix}-radius-xsmall),
      small-font-size: var(--#{$prefix}-small-font-size-label-small),
      medium-font-size: var(--#{$prefix}-medium-font-size-label-small),
      large-font-size: var(--#{$prefix}-large-font-size-label-small),
      font-weight: var(--#{$prefix}-font-weight-regular),
    ),
    text-medium: (
      size-height: var(--#{$prefix}-size-small),
      padding-x: var(--#{$prefix}-padding-1),
      padding-y: 0,
      gap: var(--#{$prefix}-gap-2),
      radius: var(--#{$prefix}-radius-small),
      small-font-size: var(--#{$prefix}-small-font-size-label-medium),
      medium-font-size: var(--#{$prefix}-medium-font-size-label-medium),
      large-font-size: var(--#{$prefix}-large-font-size-label-medium),
      font-weight: var(--#{$prefix}-font-weight-regular),
    ),
    text-large: (
      size-height: var(--#{$prefix}-size-medium),
      padding-x: var(--#{$prefix}-padding-1),
      padding-y: 0,
      gap: var(--#{$prefix}-gap-2),
      radius: var(--#{$prefix}-radius-medium),
      small-font-size: var(--#{$prefix}-small-font-size-label-large),
      medium-font-size: var(--#{$prefix}-medium-font-size-label-large),
      large-font-size: var(--#{$prefix}-large-font-size-label-large),
      font-weight: var(--#{$prefix}-font-weight-regular),
    ),
    link-small: (
      padding-x: var(--#{$prefix}-padding-1),
      padding-y: 0,
      gap: var(--#{$prefix}-gap-1),
      radius: var(--#{$prefix}-radius-xsmall),
      small-font-size: var(--#{$prefix}-small-font-size-body-small),
      medium-font-size: var(--#{$prefix}-medium-font-size-body-small),
      large-font-size: var(--#{$prefix}-large-font-size-body-small),
      font-weight: var(--#{$prefix}-font-weight-regular),
    ),
    link-medium: (
      padding-x: var(--#{$prefix}-padding-1),
      padding-y: 0,
      gap: var(--#{$prefix}-gap-2),
      radius: var(--#{$prefix}-radius-xsmall),
      small-font-size: var(--#{$prefix}-small-font-size-body-medium),
      medium-font-size: var(--#{$prefix}-medium-font-size-body-medium),
      large-font-size: var(--#{$prefix}-large-font-size-body-medium),
      font-weight: var(--#{$prefix}-font-weight-regular),
    ),
    link-large: (
      padding-x: var(--#{$prefix}-padding-1),
      padding-y: 0,
      gap: var(--#{$prefix}-gap-2),
      radius: var(--#{$prefix}-radius-small),
      small-font-size: var(--#{$prefix}-small-font-size-body-large),
      medium-font-size: var(--#{$prefix}-medium-font-size-body-large),
      large-font-size: var(--#{$prefix}-large-font-size-body-large),
      font-weight: var(--#{$prefix}-font-weight-regular),
    ),
  ) !default;

  // css variable 생성
  @each $size, $types in $button-size {
    @each $type, $value in $types {
      // css variable 생성
      --#{$prefix}-button--#{$type}-#{$size}: #{$value};
    }
  }

  // class 정의
  & {
    @include btn-size(large);

    & {
      @each $size, $types in $button-size {
        &.#{$size} {
          @include btn-size(#{$size});
        }
      }
    }
  }
}

// 컬러 정의
@mixin button-color-variable($mode) {
  // 변수 배열 정의
  $button-color-variable: (
    primary: (
      fill: var(--#{$prefix}-#{$mode}-color-button-primary-fill),
      fill-hover: var(--#{$prefix}-#{$mode}-color-button-primary-fill-hover),
      fill-pressed: var(--#{$prefix}-#{$mode}-color-button-primary-fill-pressed),
      fill-disabled: var(--#{$prefix}-#{$mode}-color-button-disabled-fill),
      border: var(--#{$prefix}-#{$mode}-color-button-primary-fill),
      border-disabled: var(--#{$prefix}-#{$mode}-color-button-disabled-fill),
      text: var(--#{$prefix}-#{$mode}-color-text-inverse-static),
      text-disabled: var(--#{$prefix}-#{$mode}-color-text-disabled-on),
    ),
    secondary: (
      fill: var(--#{$prefix}-#{$mode}-color-button-secondary-fill),
      fill-hover: var(--#{$prefix}-#{$mode}-color-button-secondary-fill-hover),
      fill-pressed: var(--#{$prefix}-#{$mode}-color-button-secondary-fill-pressed),
      fill-disabled: var(--#{$prefix}-#{$mode}-color-button-disabled-fill),
      border: var(--#{$prefix}-#{$mode}-color-button-secondary-border),
      border-disabled: var(--#{$prefix}-#{$mode}-color-button-disabled-border),
      text: var(--#{$prefix}-#{$mode}-color-text-secondary),
      text-disabled: var(--#{$prefix}-#{$mode}-color-text-disabled-on),
    ),
    tertiary: (
      fill: var(--#{$prefix}-#{$mode}-color-button-tertiary-fill),
      fill-hover: var(--#{$prefix}-#{$mode}-color-button-tertiary-fill-hover),
      fill-pressed: var(--#{$prefix}-#{$mode}-color-button-tertiary-fill-pressed),
      fill-disabled: var(--#{$prefix}-#{$mode}-color-button-disabled-fill),
      border: var(--#{$prefix}-#{$mode}-color-button-tertiary-border),
      border-disabled: var(--#{$prefix}-#{$mode}-color-button-disabled-border),
      text: var(--#{$prefix}-#{$mode}-color-text-basic),
      text-disabled: var(--#{$prefix}-#{$mode}-color-text-disabled-on),
    ),
    text-primary: (
      fill: var(--#{$prefix}-#{$mode}-color-button-text-fill),
      fill-hover: var(--#{$prefix}-#{$mode}-color-button-text-fill-hover),
      fill-pressed: var(--#{$prefix}-#{$mode}-color-button-text-fill-pressed),
      fill-disabled: var(--#{$prefix}-#{$mode}-color-button-text-fill),
      border: var(--#{$prefix}-#{$mode}-color-button-text-border),
      border-disabled: var(--#{$prefix}-#{$mode}-color-border-transparency),
      text: var(--#{$prefix}-#{$mode}-color-text-secondary),
      text-disabled: var(--#{$prefix}-#{$mode}-color-text-disabled),
    ),
    text-secondary: (
      fill: var(--#{$prefix}-#{$mode}-color-button-text-fill),
      fill-hover: var(--#{$prefix}-#{$mode}-color-button-text-fill-hover),
      fill-pressed: var(--#{$prefix}-#{$mode}-color-button-text-fill-pressed),
      fill-disabled: var(--#{$prefix}-#{$mode}-color-button-text-fill),
      border: var(--#{$prefix}-#{$mode}-color-button-text-border),
      border-disabled: var(--#{$prefix}-#{$mode}-color-border-transparency),
      text: var(--#{$prefix}-#{$mode}-color-text-basic),
      text-disabled: var(--#{$prefix}-#{$mode}-color-text-disabled),
    ),
    link-primary: (
      border: var(--#{$prefix}-#{$mode}-color-border-transparency),
      border-disabled: var(--#{$prefix}-#{$mode}-color-border-transparency),
      text: var(--#{$prefix}-#{$mode}-color-link-default),
      text-hover: var(--#{$prefix}-#{$mode}-color-link-hover),
      text-pressed: var(--#{$prefix}-#{$mode}-color-link-pressed),
      text-visited: var(--#{$prefix}-#{$mode}-color-link-visited),
      text-disabled: var(--#{$prefix}-#{$mode}-color-text-disabled),
    ),
    link-subtle: (
      border: var(--#{$prefix}-#{$mode}-color-border-transparency),
      border-disabled: var(--#{$prefix}-#{$mode}-color-border-transparency),
      text: var(--#{$prefix}-#{$mode}-color-text-basic),
      text-hover: var(--#{$prefix}-#{$mode}-color-link-hover),
      text-pressed: var(--#{$prefix}-#{$mode}-color-link-pressed),
      text-visited: var(--#{$prefix}-#{$mode}-color-link-visited),
      text-disabled: var(--#{$prefix}-#{$mode}-color-text-disabled),
    ),
  ) !default;

  // css variable 생성
  @each $color, $types in $button-color-variable {
    @each $type, $value in $types {
      --#{$prefix}-button--color-#{$color}-#{$type}: #{$value};
    }
  }

  // class 생성
  & {
    @include btn-color(primary);

    & {
      // 컬러 별 class
      @each $color, $types in $button-color-variable {
        &.#{$color} {
          @include btn-color(#{$color});

          &:not(.icon) {
            .svg-icon {
              @include btn-color-icon(#{$color});
            }
          }

          &:hover {
            @include btn-color-hover(#{$color});
          }

          &:active,
          &:focus {
            @include btn-color-pressed(#{$color});
          }

          &[disabled],
          &.disabled {
            @include btn-color-disabled(#{$color});

            &:not(.icon) {
              .svg-icon {
                background-color: var(--#{$prefix}-button--color-#{$color}-text-disabled);
              }
            }

            &:hover {
              @include btn-color-disabled(#{$color});
            }
          }
        }
      }
    }
  }
}

/* icon 버튼 사이즈 */
$button-icon-size: (
  xsmall: var(--#{$prefix}-size-xxxsmall),
  small: var(--#{$prefix}-size-xxsmall),
  medium: var(--#{$prefix}-size-xsmall),
  large: var(--#{$prefix}-size-small),
  xlarge: var(--#{$prefix}-size-medium),
) !default;

// 컬러별 variable
@mixin btn-color($color) {
  background-color: var(--#{$prefix}-button--color-#{$color}-fill);
  border-color: var(--#{$prefix}-button--color-#{$color}-border);
  color: var(--#{$prefix}-button--color-#{$color}-text);
}

@mixin btn-color-hover($color) {
  background-color: var(--#{$prefix}-button--color-#{$color}-fill-hover);
}

@mixin btn-color-pressed($color) {
  background-color: var(--#{$prefix}-button--color-#{$color}-fill-pressed);
}

@mixin btn-color-disabled($color) {
  background-color: var(--#{$prefix}-button--color-#{$color}-fill-disabled);
  border-color: var(--#{$prefix}-button--color-#{$color}-border-disabled);
  color: var(--#{$prefix}-button--color-#{$color}-text-disabled);
}

@mixin btn-color-icon($color) {
  background-color: var(--#{$prefix}-button--color-#{$color}-text);
}

.#{$prefix}-btn {
  @include button-size-variable;
}

.#{$prefix}-btn {
  @include button-color-variable(map.get($modes, 'light'));

  & {
    // 기본버튼: primary large
    @include flex-layout($d: inline-flex, $ai: center, $jc: center);

    width: auto;
    border-style: solid;
    cursor: pointer;
    white-space: nowrap;
    transition: var(--#{$prefix}-transition-base);

    @include border-size-mode(map.get($modes, 'light'));
  }

  .svg-icon {
    @include btn-color-icon(primary);

    transition: var(--#{$prefix}-transition-base);
  }

  &:hover {
    @include btn-color-hover(primary);
  }

  &:active,
  &:focus {
    @include btn-color-pressed(primary);
  }

  &[disabled],
  &.disabled {
    @include btn-color-disabled(primary);

    cursor: default;

    &:hover {
      @include btn-color-disabled(primary);
    }
  }

  &[class*='text-'] {
    // large 사이즈 기준 기본 세팅수정
    & {
      align-items: center;
      white-space: normal;
    }

    &.h-auto {
      height: auto;
      padding: var(--#{$prefix}-padding-1) !important;
    }

    .svg-icon {
      display: inline-block;
    }
  }

  &[class*='link-'] {
    // 링크인 경우 (텍스트 버튼과 비슷해보이지만 높이값 없음)
    // @include btn-link-variable;

    // large 사이즈 기준 기본 세팅수정
    
    height: auto !important;
    text-decoration: underline;
    background-color: transparent;
    text-align: left;
    white-space: normal;

    &:hover {
      $color: var(--#{$prefix}-#{map.get($modes, 'light')}-color-link-hover);

      color: $color;

      .svg-icon {
        background-color: $color;
      }
    }

    &:active,
    &:focus {
      $color: var(--#{$prefix}-#{map.get($modes, 'light')}-color-link-pressed);

      color: $color;
      background-color: transparent;

      .svg-icon {
        background-color: $color;
      }
    }

    &:visited {
      $color: var(--#{$prefix}-#{map.get($modes, 'light')}-color-link-visited);

      color: $color;

      .svg-icon {
        background-color: $color;
      }
    }

    &.underline {
      &.hidden-underline {
        text-decoration-color: var(--#{$prefix}-#{map.get($modes, 'light')}-color-border-transparency);
        transition: var(--#{$prefix}-transition-base);
      }
    }

    &:hover,
    &:active,
    &:focus,
    &:visited {
      .underline {
        &.hidden-underline {
          text-decoration-color: inherit;
        }
      }
    }

    .svg-icon {
      display: inline-block;
    }
  }

  /* icon 버튼 (텍스트 없음) */
  &.icon {
    @each $size, $value in $button-icon-size {
      --#{$prefix}-button--icon-size-#{$size}: #{$value};
    }

    // 기본 세팅
    @include square(var(--#{$prefix}-button--icon-size-medium));

    padding: 0 !important;
    background-color: transparent;
    border-color: var(--#{$prefix}-#{map.get($modes, 'light')}-color-border-transparency);
    color: inherit;
    border-width: 0;

    &:hover,
    &:active {
      background-color: inherit;
    }

    & {
      @each $size, $value in $button-icon-size {
        &.#{$size} {
          @include square(var(--#{$prefix}-button--icon-size-#{$size}));

          // icon size
          .svg-icon {
            @include square(100%);
          }
        }
      }
    }

    .svg-icon {
      background-color: var(--#{$prefix}-#{map.get($modes, 'light')}-color-text-basic);
    }

    &.pure {
      .svg-icon {
        background-color: transparent;
      }
    }

    // 새로고침, 토글 등 보더 아이콘 버튼 형태
    &.border {
      background-color: var(--#{$prefix}-#{map.get($modes, 'light')}-color-action-default);
      border: 0.1rem solid var(--#{$prefix}-#{map.get($modes, 'light')}-color-border-neutral-light);
      border-radius: var(--#{$prefix}-radius-full);

      // icon size 1.6rem
      &.large {
        .svg-icon {
          @include square(var(--#{$prefix}-icon--size-xsmall));
        }
      }

      &.xlarge {
        .svg-icon {
          @include square(var(--#{$prefix}-icon--size-xlarge));
        }
      }

      &[disabled],
      &.disabled {
        background-color: var(--#{$prefix}-#{map.get($modes, 'light')}-color-button-disabled-fill);
      }
    }
  }
}

// 고대비모드
@include color-mode($mode: high-contrast) {
  .#{$prefix}-btn {
    @include border-size-mode(map.get($modes, 'high-contrast'));
    @include button-color-variable(map.get($modes, 'high-contrast'));

    &.text {
      // class명 검토
      &.ico-filter {
        .num {
          color: var(--#{$prefix}-#{map.get($modes, 'high-contrast')}-color-text-basic-inverse);
          background-color: var(--#{$prefix}-#{map.get($modes, 'high-contrast')}-color-element-primary);
        }
      }
    }

    &.link {
      &.basic {
        $color: var(--#{$prefix}-#{map.get($modes, 'high-contrast')}-color-text-basic);

        color: $color;

        &:not(.icon) {
          .svg-icon {
            background-color: $color;
          }
        }

        &.pure {
          &:hover,
          &:active,
          &:focus,
          &:visited {
            color: $color;

            .svg-icon {
              background-color: $color;
            }
          }
        }
      }

      &:hover {
        $color: var(--#{$prefix}-#{map.get($modes, 'high-contrast')}-color-link-hover);

        color: $color;

        &:not(.icon) {
          .svg-icon {
            background-color: $color;
          }
        }
      }

      &:active,
      &:focus {
        $color: var(--#{$prefix}-#{map.get($modes, 'high-contrast')}-color-link-pressed);

        color: $color;

        &:not(.icon) {
          .svg-icon {
            background-color: $color;
          }
        }
      }

      &:visited {
        $color: var(--#{$prefix}-#{map.get($modes, 'high-contrast')}-color-link-visited);

        color: $color;

        &:not(.icon) {
          .svg-icon {
            background-color: $color;
          }
        }
      }

      &.pure {
        &:hover,
        &:active,
        &:focus,
        &:visited {
          $color: var(--#{$prefix}-button--color-link-text);

          color: $color;

          .svg-icon {
            background-color: $color;
          }
        }
      }

      .underline {
        &.hidden-underline {
          text-decoration-color: var(--#{$prefix}-#{map.get($modes, 'high-contrast')}-color-border-transparency);
        }
      }

      &:hover,
      &:active,
      &:focus,
      &:visited {
        .underline {
          &.hidden-underline {
            text-decoration-color: inherit;
          }
        }
      }
    }

    /* icon 버튼 (텍스트 없음) */
    &.icon {
      background-color: transparent;
      border-color: var(--#{$prefix}-#{map.get($modes, 'high-contrast')}-color-border-transparency);

      .svg-icon {
        background-color: var(--#{$prefix}-#{map.get($modes, 'high-contrast')}-color-text-basic);
      }

      // 새로고침, 토글 등 보더 아이콘 버튼 형태
      &.border {
        background-color: var(--#{$prefix}-#{map.get($modes, 'high-contrast')}-color-background-white);
        border-color: var(--#{$prefix}-#{map.get($modes, 'high-contrast')}-color-border-gray);

        &[disabled],
        &.disabled {
          background-color: var(--#{$prefix}-#{map.get($modes, 'high-contrast')}-color-button-disabled-fill);
        }
      }
    }
  }
}

/* **** button area **** */
.btn-wrap {
  width: 100%;
}
