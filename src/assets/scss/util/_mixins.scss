@charset "UTF-8";
@use "variables" as *;
@use "breakpoints" as *;
@use "sass:string";
@use "sass:list";

@mixin font($family, $name, $types, $weight, $style: normal) {
  $sources: ();

  @each $type in $types {
    $ext: "";
    @if $type == "opentype" {
      $ext: "otf";
    } @else if $type == "truetype" {
      $ext: "ttf";
    } @else if $type == "woff" {
      $ext: "woff";
    } @else if $type == "woff2" {
      $ext: "woff2";
    } @else {
      @warn "Unknown font type: #{$type}";
    }

    @if $ext != "" {
      $url: $base-url + "fonts/" + $name + "." + $ext;
      $sources: list.append($sources, url(#{$url}) format("#{$type}"), comma);
    }
  }

  font-family: "#{$family}";
  src: #{$sources};
  font-weight: $weight;
  font-style: $style;
}

@mixin bg($url, $pos: center, $size: cover, $color: null) {
	background: $color url(#{$base-url}images/#{$url}) no-repeat $pos / $size;
}

// focus color
@mixin focus($offset: -0.4rem, $color: var(--#{$prefix}-light-color-border-primary), $alpha: 0.8) {
  box-shadow: var(--#{$prefix}-box-shadow-outline-inset);
  outline-offset: $offset;
}

// flex 확대 축소
@mixin flex-size($shrink, $grow) {
  flex-shrink: $shrink;
  flex-grow: $grow;
}

// position
@mixin position($p: absolute, $t: auto, $b: auto, $l: auto, $r: auto) {
  position: $p;
  // inset: $t $r $b $l;

  @if $t  { top: $t; }
  @if $b  { bottom: $b; }
  @if $l  { left: $l; }
  @if $r  { right: $r; }
}

// square rectangle
@mixin square($w, $h: $w) {
  width: $w;
  height: $h;
}

// pseudo element setting
@mixin pseudo($c: null) {
  content: '' + $c + '';
}

// flex layout
@mixin flex-layout($d: flex, $ai: null, $jc: null, $fd: null) {
  display: $d;
  // align-items: $ai;
  // justify-content: $jc;
  
  @if $ai  { align-items: $ai; }
  @if $ai  { justify-content: $jc; }
  @if $fd  { flex-direction: $fd; }
}

// group contents
@mixin group-wrap() {
  display: flex;
  flex-wrap: wrap;
  align-items: stretch;
  position: relative;
  width: 100%;
}

@mixin group() {
  flex: 1 1 auto;
  position: relative;
  width: 1%;
  min-width: 0;
}

// flex item equal width
@mixin equal-width() {
  flex: 1 1 0px;
  min-width: 0;
}

// position 중앙 정렬
@mixin position-center($type: both) {
  // 좌우중앙
  @if $type == 'x' {
    left: 50%;
    transform: translateX(-50%);
  }

  // 상하중앙
  @else if $type == 'y' {
    top: 50%;
    transform: translateY(-50%);
  }

  // 상하좌우중앙
  @else if $type == 'both' {
    left: 50%;
    top: 50%;
    transform: translateX(-50%) translateY(-50%);
  }
}

// transform 기준점 중앙 정렬
@mixin transform-origin($x: 50%, $y: 50%) {
  transform-origin: $x $y;
}

// **** text attr **** //
@mixin ellipsis($line: 1) {
  @if ($line == 1) {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    overflow: hidden;
    text-overflow: ellipsis;
    word-wrap: break-word; // 공백 없을때 글자 짤림 방지
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $line;
  }
}

// sr-only
@mixin sr-only {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

// reset text : popover/tooltip
@mixin reset-text {
  font-size: 1.6rem;
  font-style: normal;
  font-weight: 400;
  line-height: var(--#{$prefix}-line-height-base);
  text-align: left;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  letter-spacing: normal;

  // word-break: normal;
  white-space: normal;
  word-spacing: normal;
  line-break: auto;

  @include mq(mobile) {
    font-size: 1.8rem;
  }
}

// css animation visibility
@mixin visibility($v) {
  @if $v == hidden {
    visibility: hidden;
    z-index: -1;
    opacity: 0;
  } @else if $v == visible {
    visibility: visible;
    z-index: auto;
    opacity: 1;
  }
}

// **** scroll **** //
@mixin scrollbar() {
  &::-webkit-scrollbar {
    width: 0.8rem;
  }

  &::-webkit-scrollbar-thumb {
    background-color: #F4C0A9;
    border-radius: 0.8rem;
  }

  &::-webkit-scrollbar-track {
    background-color: #fdefec;
  }
}

// text underline
@mixin underline($offset: var(--#{$prefix}-font-underline-offset)) {
  text-decoration: underline;
  text-underline-offset: $offset;
}

@mixin border-position($position: left, $line, $color, $important) {
  border-#{$position}: #{$line} solid #{$color} #{$important};
}
